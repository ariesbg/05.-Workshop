using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;

namespace Tron
{
    class Program
    {
        static int left = 0;
        static int right = 1;
        static int up = 2;
        static int down = 3;

        static int firstPlayerScore = 0;
        static int firstPlayerColumn = 0; // column
        static int firstPlayerRow = 0; // row
        static int firstPlayerDirection = right; // parvonachalnite pozicii

        static int secondPlayerDirection = left;
        static int secondPlayerScore = 0;
        static int secondPlayerColumn = 40;
        static int secondPlayerRow = 5;

        static void ChangePlayerDirection(ConsoleKeyInfo key)
        {
            // first player
            if (key.Key == ConsoleKey.W)
            {
                firstPlayerDirection = up;
            }
            if (key.Key == ConsoleKey.A)
            {
                firstPlayerDirection = left;
            }
            if (key.Key == ConsoleKey.D)
            {
                firstPlayerDirection = right;
            }
            if (key.Key == ConsoleKey.S)
            {
                firstPlayerDirection = down;
            }

            //second player
            if (key.Key == ConsoleKey.UpArrow)
            {
                secondPlayerDirection = up;
            }
            if (key.Key == ConsoleKey.DownArrow)
            {
                secondPlayerDirection = down;
            }
            if (key.Key == ConsoleKey.LeftArrow)
            {
                secondPlayerDirection = left;
            }
            if (key.Key == ConsoleKey.RightArrow)
            {
                secondPlayerDirection = right;
            }
        }

        static void MovePlayers()
        {
            // promenqme stoinostite na poziciite 
            if (firstPlayerDirection == right)
            {
                firstPlayerColumn++;
            }
            if (firstPlayerDirection == left)
            {
                firstPlayerColumn--;
            }
            if (firstPlayerDirection == up)
            {
                firstPlayerRow--;
            }
            if (firstPlayerDirection == down)
            {
                firstPlayerRow++;
            }


            if (secondPlayerDirection == right)
            {
                secondPlayerColumn++;
            }
            if (secondPlayerDirection == left)
            {
                secondPlayerColumn--;
            }
            if (secondPlayerDirection == up)
            {
                secondPlayerRow--;
            }
            if (secondPlayerDirection == down)
            {
                secondPlayerRow++;
            }

        }

        static void SetGameField()
        {
            Console.WindowHeight = 30; // zadavame razmer na konsolata
            Console.BufferHeight = 30;

            Console.WindowWidth = 100;
            Console.BufferWidth = 100;

            firstPlayerColumn = 0;
            firstPlayerRow = Console.WindowHeight / 2;

            secondPlayerColumn = Console.WindowWidth - 1; // posledniqt red 99 (100-1);
            secondPlayerRow = Console.WindowHeight / 2;
        }


        static void WriteOnPosition(int x, int y, char ch)
        {
            Console.SetCursorPosition(x, y);
            Console.Write(ch);
        }

        static int IsGameOver()
        {
            // kogato vtoriqt pecheli
            if (firstPlayerRow < 0)
            {
                return 2; // pe4eli vtoriqt igra4
            }

            if (firstPlayerColumn < 0)
            {
                return 2; // pe4eli vtoriqt igra4
            }

            if (firstPlayerRow >= Console.WindowHeight)
            {
                return 2;
            }
            if (firstPlayerColumn >= Console.WindowWidth)
            {
                return 2;
            }

            // kogato parviqt pecheli
            if (secondPlayerRow < 0)
            {
                return 1; 
            }

            if (secondPlayerColumn < 0)
            {
                return 1; 
            }

            if (secondPlayerRow >= Console.WindowHeight)
            {
                return 1;
            }
            if (secondPlayerColumn >= Console.WindowWidth)
            {
                return 1;
            }

            return 0; // ako nikoi ne pecheli

        }

        static void Main()
        {


            SetGameField();
            
            while (true)
            {

                if (Console.KeyAvailable)
                {
                    ConsoleKeyInfo key = Console.ReadKey();
                    ChangePlayerDirection(key);
                }

                MovePlayers();

               int winner = IsGameOver();
               if (winner > 0)
               {
                   Console.WriteLine("Game Over");
                   if (winner == 1)
                   {
                       Console.WriteLine("First player wins");
                   }
                   if (winner == 2)
                   {
                       Console.WriteLine("Second player wins");
                   }
                   Environment.Exit(0); // spirane na igrata;
               }
                WriteOnPosition(firstPlayerColumn, firstPlayerRow, '*');
                WriteOnPosition(secondPlayerColumn, secondPlayerRow, '#');

                Thread.Sleep(200); 

            }
        }

        
    }

}
